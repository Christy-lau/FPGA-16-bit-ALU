/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module input_storer_1 (
    input clk,
    input rst,
    input button_a,
    input button_b,
    input [15:0] value,
    output reg [15:0] outA,
    output reg [15:0] outB
  );
  
  
  
  wire [1-1:0] M_detector_a_out;
  reg [1-1:0] M_detector_a_in;
  edge_detector_6 detector_a (
    .clk(clk),
    .in(M_detector_a_in),
    .out(M_detector_a_out)
  );
  
  wire [1-1:0] M_detector_b_out;
  reg [1-1:0] M_detector_b_in;
  edge_detector_6 detector_b (
    .clk(clk),
    .in(M_detector_b_in),
    .out(M_detector_b_out)
  );
  
  wire [1-1:0] M_btnA_out;
  button_conditioner_7 btnA (
    .clk(clk),
    .in(button_a),
    .out(M_btnA_out)
  );
  
  wire [1-1:0] M_btnB_out;
  button_conditioner_7 btnB (
    .clk(clk),
    .in(button_b),
    .out(M_btnB_out)
  );
  
  reg [15:0] M_storeA_d, M_storeA_q = 1'h0;
  
  reg [15:0] M_storeB_d, M_storeB_q = 1'h0;
  
  always @* begin
    M_storeA_d = M_storeA_q;
    M_storeB_d = M_storeB_q;
    
    M_detector_a_in = M_btnA_out;
    M_detector_b_in = M_btnB_out;
    if (M_detector_a_out) begin
      M_storeA_d = value;
    end
    if (M_detector_b_out) begin
      M_storeB_d = value;
    end
    outA = M_storeA_q;
    outB = M_storeB_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_storeB_q <= 1'h0;
    end else begin
      M_storeB_q <= M_storeB_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_storeA_q <= 1'h0;
    end else begin
      M_storeA_q <= M_storeA_d;
    end
  end
  
endmodule
