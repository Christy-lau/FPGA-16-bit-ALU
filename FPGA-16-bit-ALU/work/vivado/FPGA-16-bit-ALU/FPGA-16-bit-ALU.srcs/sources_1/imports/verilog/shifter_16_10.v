/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module shifter_16_10 (
    input [15:0] a,
    input [15:0] b,
    input [5:0] alufn,
    input [0:0] sim_error,
    output reg [15:0] out
  );
  
  
  
  always @* begin
    
    case (alufn[0+1-:2])
      default: begin
        out = a;
      end
      2'h0: begin
        if (sim_error == 1'h0) begin
          out = a << b[0+3-:4];
        end else begin
          out = a << b[0+3-:4] + 1'h1;
        end
      end
      2'h2: begin
        if (sim_error == 1'h0) begin
          out = $signed(a) <<< b[0+3-:4];
        end else begin
          out = $signed(a) <<< b[0+3-:4] + 1'h1;
        end
      end
      2'h1: begin
        if (sim_error == 1'h0) begin
          out = a >> b[0+3-:4];
        end else begin
          out = a >> b[0+3-:4] + 1'h1;
        end
      end
      2'h3: begin
        if (sim_error == 1'h0) begin
          out = $signed(a) >>> b[0+3-:4];
        end else begin
          out = $signed(a) >>> b[0+3-:4] + 1'h1;
        end
      end
    endcase
  end
endmodule
